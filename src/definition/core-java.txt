    Please answer the below core-java Questions:

    What is programing language?
    Ans : A programming language is a formal language comprising a set of instructions that produce various kinds of output.
     Programming languages are used in computer programming to implement algorithms.

    What jdk contains or composed of and define each components?

    What is IDE?
    Ans: Integrated Development Environment (IDE) is a software application that combines all of the features and tools
    needed by a software developer.An IDE is used to create application, drivers and utilites.

    What are the IDEs available in the market to support java?
    Ans: Eclipse, Intellij

    Explain the entire java life cycle.
    Ans:Java life cycle is consist of three stages.
    1. Writing the program - Write your source code and save the program with .java extension.
    2. compiling the program -  The name of the Java compiler is javac. The input to the compiler is Java source code which
       is available in Sample.java. The output of the compiler is machine independent or platform independent code which is
       known as bytecode. The file which is generated after compilation is .class file.
    3. Executing the program - The bytecode generated by the compiler will be executed by Java Virtual Machine (JVM).
       Input to the JVM is bytecode and output is machine code (0’s and 1’s) which will be executed by the CPU of the local
       machine.


    what is class?
    Ans:A class is the template or blueprint from which objects are made.

    What is object?
    Ans:

    What is the entry point of an application?
    Ans:In computer programming, an entry point is where the first instructions of a program are executed, and where the
        program has access to command line arguments. The main() method is the entry point for a Java application.


    Why main is static?
    Ans:Main method has to be static so that JVM can load the class into memory and call the main method. static member can
        be accessed before any objects of its class are created, and without reference to any object.


    Which class is the superclass of all classes?
    Ans:Object class (java.lang.object)

    What is difference between path and classpath variables?
    The main difference between PATH and CLASSPATH is that  PATH is an environment variable which is used to locate JDK
     binaries like "java" or "javac" command used to run java program and compile java source file. On the other hand,
     CLASSPATH, an environment variable is used by System or Application ClassLoader to locate and load compile Java
     bytecodes stored in the .class file.

    2) In order to set PATH in Java, you need to include JDK_HOME/bin directory in PATH environment variable while in order
     to set CLASSPATH in Java you need to include all those directories where you have put either your .class file or
     JAR file which is required by your Java application.

    3) Another significant difference between PATH and CLASSPATH is that PATH can not be overridden by any Java settings
    but CLASSPATH can be overridden by providing command line option -classpath or -cp to both "java" and "javac" commands
    or by using Class-Path attribute in Manifest file inside JAR archive.

    4) PATH environment variable is used by operating system to find any binary or command typed in the shell,
    this is true for both Windows and Linux environment while CLASSPATH is only used by Java ClassLoaders to load class
    files.


     What is the difference between an Interface and Abstract class?
     Ans: Types of methods: Interface can have only abstract methods(methods with no body only). Abstract class can have
     abstract and non abstract methods.
     Variables: Variables are declard in a Java interface are by default final and can only have final and static
     variables. An abstract class can have final, non -final, static and non-static variables.
     Implementation: Interface can't provide the implementation of abstract class.An Interface can extend another Java
     interface only. Abstract class can provide the implementation of interface. An abstract class can extend another
     Java class and implement multiple Java interfaces.
     Accessibility: Member of Java interface are public by default. An abstract class can have class members like
     private, protected etc.
     Keywords: Interface can be implemented using keyword "Implements" and abstract class can be extended using keyword
     "extends".


      Can you make an Object from an Interface and Abstract class ? if not how do you use it ?
      Ans: We can’t create Object for an interface, and abstract classes but we can create an reference variable
      of the interface and abstract class to implements method and variable of interface and abstract class.


    what is Access Specifier?
    Java supports four types of access specifiers - public, private, default and protected.

    What is OOP ? Define each feature of java OOP.
    OOP stands for Object Oriented Programming. OOP is based on the concept of "objects" that contain data and methods.
    Encapsulation: - Encapsulation is used to make sure that sensitive data remains hidden from users.

    Inheritance :- The process by which one class acquires the properties and functionalities of another class is called
    inheritance. Inheritance provides the idea of reusability of code and each sub class defines only those features
    that are unique to it, rest of the features can be inherited from the parent class.The parent class is called the
    base class or super class. The child class that extends the base class is called the derived class or sub class or
    child class.

    Abstraction : - Abstraction is a process where you show only relevant data.A process of hiding the implementation
    details from the user. In other words, you will have the information on what the object does as opposed to how the
    object does it.

    Polymorishiym :- Poly = many and Morphism = forms. Polymorphism is the ability of an object to take many forms.
    The most common use of polymorphism in OOP occurs when a parent class references a child class object.



     What is Java Package and which package is imported by default?
     Java.lang package is imported by default in Java.A package as the name suggests is a pack(group) of classes,
     interfaces and other packages.We use packages to organize our classes and interfaces. We have two types of packages
     in Java: built-in packages and the packages we can create (also known as user defined package).


     What is API? Name list of API that you have used so far..
     API stands for Application Programming Interface.API is a list of all classes that are part of the JDK.It includes
     all the packages, classes and interfaces along with their methods, fields and constructors.
     I used java.lang, java.sql, java.util.


     Does java support multiple inheritance, explain why or why not?
     Java doesn't support multiple inheritance because Using Multiple inheritance often leads to problems in the
     hierarchy. This results in unwanted complexity when further extending the class.


    What is method overloading and when it happens?
    Method overloading allows a class to have more than one method with different parameters. We can overload a method
    in three ways: Numbers of parameters, Data type of parameters, sequence of data type parameters.


    Explain exceptions in java and how to handle it.
    An exception is an unwanted or unexpected event, that occurs during the execution of program.Exception handling in
    Java is one of the mechanism to handle the runtime errors such as IO ,SQL ,Remote etc. There are two types of
    exceptions in Java: checked and unchecked exception. Java supports 5 keywords for exception handling: try, catch,
    finally, throw and throws.

    What is static keyword in java? How it has been used in variables and methods ?
    Static is a non-access modifier. "Static" keyword is used to declare the vairables and methods static. When a method
    or variable is declared static, it can be accessed before any objects of its class are created, and without
    reference to any object.


    What is final and how it has been used variables and methods?
    The final keyword is used to apply some restriction to the user. The final keyword can be applied to class,
    method and variables in Java. The final keyword used with variable makes variable constant, used with a method to
    restrict the method overriding, used with a class to restrict the inheritance of class.



    What is final, finally and finalize?
    Final: The final keyword is used to apply some restriction to the user. The final keyword can be applied to class,
    method and variables in Java. The final keyword used with variable makes variable constant, used with a method to
    restrict the method overriding, used with a class to restrict the inheritance of class.
    Finally: Finally keyword is used to execute a set of statements or blocks. The finally block is executed after the
    excutions of try block. A finally block contains all statements that must be executed whether an exception occurs or
    not.
    Finalize: The finalize() method is defined in Object class.  This method is called by Garbage collector just before
    they destroy the object from memory. The Garbage collector is used to destroy the object which is eligible for garabage
    collection.



    What is a constructor ?
    Constructor:In the Java programming language, you use constructors to construct new instances. A constructor is a
    special method whose purpose is to construct and initialize objects.
    • A constructor has the same name as the class.
    • A class can have more than one constructor.
    • A constructor can take zero, one, or more parameters.
    • A constructor has no return value.
    • A constructor is always called with the new operator.


    Can we have multiple constructors in a class?
    Yes, we can have multiple constructors with different parameters.


    If we don't have a constructor declared, what is called during the object creation?
    If you don't declare the constructor, compiler will generate the no argument default constructor.


    What is "this" keyword in java ?
    "this" keyword is reference variable that refers to the current object.We can access the object on which
     we call the method.
    "this" can be used to invoke current class method (implicity).
    "this" can be used to invoke current or parent class constructor.
    "this" can be passed as an argument in the method call.
    "this" can be passed as an argument in the constructor call.
    "this" can be used to return the current class instance from the method.

    What is "super" keyword in java? How many possible way can you use?
    The "super" keyword uses in subclasses to access the object of the superclass. We can refer to the variables,
    constructor and method of superclass by using the "super" keyword.
    1.Super Keyword can access the variable of the parent class. (super.parentclassvariablename)
    2.Super keyword can invoke the constructor of the parent class.
    3. To access the method of the parent class. (super.showDATA() showdata here is parent class method).


    What is JVM stand for ?
    Java Virtual Machine


    Is JVM platform independent?
    Yes

    What version of java are you using?
    jdk 11.0.8

    What is JAR stand for ?
    Java ARchive

    What is the difference between JDK and JVM?
    JDK: JDK stands for Java Developement Kit and is a software developement enviromet used for developing Java
    applications.It includes JRE, an interpreter/loader(Java), a complier(javac), an ARchiver(jar), a documentation
    generator (javadoc) and other tools needed in Java developement.
    JVM: Java virtual machine(JVM) is a part of both JDK and JRE becuase it contained or inbuilt in both. Whatever
    Java program you run using JRE and JDK goes into JVM and JVM is responsible for executing the java program line
    by line hense it is also known as interpreter.


    What is the difference between JVM and JRE?
    JRE: JRE stand for "Java Runtime Enviorment". The Java Runtime Enviroment provides the minimum requirements
    for executing a Java application, it consists of the JVM, core classes and supporting flies.
    JVM: Java virtual machine(JVM) is a part of both JDK and JRE becuase it contained or inbuilt in both. Whatever
    Java program you run using JRE and JDK goes into JVM and JVM is responsible for executing the java program line
    by line hense it is also known as interpreter.

    KEY DIFFERENCES : JDK vs JVM vs JRE
    JDK is a software development kit whereas JRE is a software bundle that allows Java program to run, whereas JVM
    is an environment for executing bytecode.
    The full form of JDK is Java Development Kit, while the full form of JRE is Java Runtime Environment,
    while the full form of JVM is Java Virtual Machine.
    JDK is platform dependent, JRE is also platform dependent, but JVM is platform independent.
    JDK contains tools for developing, debugging, etc. JRE contains class libraries and other supporting files,
    whereas software development tools are not included in JVM.
    JDK comes with the installer, on the other hand, JRE only contains the environment to execute source code
    whereas JVM bundled in both software JDK and JRE.


    What is compile time and run time?
    Compile-time is the time at which the source code is converted into an executable code while the run time is the
    time at which the executable code is started running.


    What is heap?
    Heap is a part of JVM memory where objects are allocated. JVM creates a Class object for each .class file.


    How java manage it's memory?
    Java has automatic memory management, a garbage collector that works in the background to clean up the unused
    objects and free up some memory.


    What is the difference between String, StringBuffer and StringBuilder?
    The differences between String, StringBuffer, and StringBuilder are based on the following
    Mutability: Strings are immutable. StringBuffer & StringBuilder are mutable.
    Performance: Strings are slow. StringBuffer slower than StringBuilder but faster than String.StringBuilder
    is faster than StringBuffer.
    Storage: String store in string pool where StringBuffer & StringBuilder stores in Heap.
    Thread Safe: String not used in threaded environment. StringBuffer used in a multi threaded environment.
    StringBuilder used in a single threaded environment.


    What is Singleton class?
    The purpose of the Singleton class is to control object creation, limiting the number of objects to only one by
    Restrict the instantiation of a class and ensures that only one instance of the class exists in the java virtual
    machine.To implement the Singleton class we can create a regular class with following...
    A private constructor
    A static field containing its only instance (getInstance())
    A static factory method for obtaining the instance

What is Serialization and Deserialization?
Ans: =Serialization= is a mechanism of converting the state of an object into a byte stream.
     =Deserialization= is the reverse process where the byte stream is used to recreate the actual Java object in memory.
     This mechanism is used to persist the object.

when to use transient variable in java?
Ans: transient variable in Java is a variable whose value is not serialized during Serialization and which is initialized
     by its default value during de-serialization, for example for object transient variable it would be null.
     this behavior can be customized by using Custom Serialized form or by using Externalizable interface.
     transient variable is used to prevent any object from being serialized and you can make any variable transient by using
      transient keyword.

Difference between while and do..while loop?
Ans: While Loop ;
     Condition is checked first then statements is excuted.
     It might occur statements is executed zero times, If condition is false.
     Final is a keyword
     No semicolon at the end of while. while condition.
     while loop is entry controlled loop.

     Do while Loop:
     Statements is executed at least once, thereafter condition is checked.
     At least once the statement is executed.
     finally is a block.
     Semicolon at the end of while. while (condition);
     Do while is exit controlled loop.

What is Enum?
Ans: An enum is a special "class" that represents a group of constants (unchangeable variables,
         like final variables). To create an enum ,
         use the enum keyword (instead of class or interface),
         and separate the constants with a comma.

What is Iterator?
Ans: Iterator is an interface that belongs to a collection framework. It allows you to traverse the collection,
     accesses the data element and removes the data elements of the collection.
     It is also considered as a Universal iterator as you can apply it to any Collection object

Which one will take more memory, an int or Integer?
Ans: An int is just one form of Integer. Integer is an object which takes 128 bits (16 bytes) to store int value,
int is a primitive data type which takes 32 bits(4 bytes) to store.

Why is String Immutable in Java?
Ans: Strings are immutable precisely so that their references can be treated as a normal variable and one can pass them around,
 between methods and across threads, without worrying about whether the actual String object it's pointing to will change.

What is constructor chaining in Java?
Ans: Constructor chaining is the process of calling one constructor from another constructor with respect to current object.
             -Constructor chaining can be done in two ways:
          -Within same class: It can be done using this() keyword for constructors in same class
          -From base class: by using super() keyword to call constructor from the base class.

The difference between Serial and Parallel Garbage Collector?
Ans:
Serial Collector: simplest collector
- Mainly designed for single-threaded environments (32 bit or Windows) and small heaps
- Freezes all app threads whenever it is working, which disqualifies it for all intents and purposes from being
used in a server environment
- How to use it - turning on the -XX:+UseSerialGC JVM argument

Parallel Garbage Collector: JVM's default collector
- Biggest advantage is it uses multiple threaders to can through and compact the heap
- Downsize is that it will stop app threads when performing minor or full GC collection
- Parallel collector is best suited for appls that can tolerate app pauses and are trying to optimize for lower CPU
overhead caused by the collector

What is JIT stands for?
Ans: Just-in-time (JIT) is a term used to describe an action such as compilation or object activation only at the
            time when it becomes necessary.
         This term is associated mostly with software compilation.
         JIT compilation is mainly designed for high-speed code execution and support for multiple platforms.
         JIT compilation originated from the need for a compiler to assume responsibilities in addition to just
         conversion to object code (machine instructions) from a high-level language.
         JIT compilers facilitate portability to multiple operating systems and hardware platforms.
         Languages such as Smalltalk, Pascal Java, and C# support JIT compilation.

Explain Java Heap space and Garbage collection?
Ans:
Heap space:
        -in Java is used for dynamic memory allocation for Java objects and JRE classes at the runtime.
        New objects are always created in heap space and the references to this objects are stored in stack memory.
        These objects have global access and can be accessed from anywhere in the application.
        This memory model is further broken into smaller parts called generations, these are:
        1)Young Generation – this is where all new objects are allocated and aged.
        A minor Garbage collection occurs when this fills up
        2)Old or Tenured Generation – this is where long surviving objects are stored.
        When objects are stored in the Young Generation, a threshold for the object's age is set and when that threshold is
        reached, the object is moved to the old generation
        3)Permanent Generation – this consists of JVM metadata for the runtime classes and application methods
Java garbage collection:
        -is the process by which Java programs perform automatic memory management.
        Java programs compile to bytecode that can be run on a Java Virtual Machine, or JVM for short.
        When Java programs run on the JVM, objects are created on the heap,
        which is a portion of memory dedicated to the program.
        Eventually, some objects will no longer be needed.
        The garbage collector finds these unused objects and deletes them to free up memory.

Can you guarantee the garbage collection process?
Ans: No guarantee.garbage collection in Java is a non-deterministic, and there is no way to predict when garbage collection
        will occur at run time.It is possible to include a hint in the code to run the garbage collector with the
        System.gc() or Runtime.gc() methods. but they provide no guarantee that the garbage collector will actually run.

What is the difference between stack and heap in Java?
Ans:
Stack Memory = used to store local variables and function calls
- each thread in Java has their own stack which can be specified using -Xss JVM parameter
- If there is no memory left in the stack for storing function call or local variable, JVM will throw java.lang.StackoverFlowError

Heap Memory = used to store objects in Java. No matter where object is created in code they are always created inside heap space
 in Java
- you can also specify heap sie of Java program using JVM option -Xms and -Xms where the heap and -Xmx is a max size of java heap
- if there is no more heap space for creating an object, JVM will through java.lang.OutOfMemoryError: Java heap space

What is reflection in java and why is it useful?
Ans: Object Reflection: is a feature in Java which provides a way to get reflective
         information about Java classes and objects, such as:
         1) Getting information about methods and fields present inside the class at run time
         2) Creating a new instance of a class
         3) Getting and setting the object fields directly by getting field reference,
            regardless of what the access modifier is.
            it is useful:
             1) Helps in observing or manipulating the runtime behavior of applications.
             2) Useful while debugging and testing applications, as it allows direct access to methods, constructors,
             fields

what is multithreading in java?
Ans: Multithreading means that you have multiple threads of execution inside the same application.
          A thread is like a separate CPU executing your application. Thus,
          a multithreaded application is like an application that has multiple CPUs executing
          different parts of the code at the same time.

What is the use of synchronization in Java?
Ans: If your code is running in a multi-threaded environment,
         You need to synchronize the objects that are shared across multiple threads.
         If not, two types of errors could occur.
               1-Thread Interference Error:
                  Thread interference in java is a condition that occurs when more than one thread,
                  running simultaneously, has access to the same piece of data.
                  When threads perform different operations on the same data,
                  the operations may overlap and create inconsistent data in the memory.
                  When that happens, the data might get lost, corrupted, or show unexpected behavior.
               2-Memory Consistency ErrorIn multithreading, there may be possibilities
               that changes made by one thread may not be visible to the other threads and that
               they all have inconsistent views of the same shared data.

What is Framework?
Ans: Framework are the bodies that contains the pre-written codes (classes and functions) in which
         we can add our code to overcome the problem. We can also say that frameworks use programmer's
         code because the framework is in control of the programmer. We can use the framework by calling its methods,
         inheritance, and supplying "callbacks", listeners, or other implementations of the Observer pattern.

What are the testing Framework available in java?
Ans: JBehave, The Grinder, KUnit, TesNG, Serenity, JWalk, Mockito, Cucumber, RESTAssured, Mocha, JSUnit, Arquillian,
 Jasmine, JTest, Karma

Difference between jUnit and testNG?
Ans: TestNG vs Junit
        = Annotations In JUnit and TestNG:there is a slight difference between the name of some of the annotations,
        but their working remains the same
        = Test Suite In JUnit and TestNG:both of them can run the tests using test suites, how they do so is slightly
        different
        = Ignore Test in JUnit and TestNG : the declaration is different.
        = Exception Test in TestNG and JUnit: with a slight variation in the declaration
        = Timeout Test In JUnit and TestNG : no defences.
        = Group Test in JUnit and TestNG: It is a new feature and comes with TestNG only, TestNG allows groups to declare
        inside the XML file.
        = Reporting in JUnit and TestNG: There is no such option to generate a report in JUnit BUT In TestNG, the tester
        gets the advantage of generating HTML and Index reports, which are generated by default.
        = Parameterized Test in JUnit and TestNG : TestNG a more natural way compared to JUnit.
        = Dependent Tests in JUnit and TestNG : JUnit currently does not support dependent tests while TestNG does
        = Parallel Test Execution in JUnit and TestNG :JUnit does not support parallel execution of tests, but TestNG does

What are the dependencies for this project?
Ans: Class/Interface Dependencies
         Compile/RunTime Dependencies
         Direct and Indirect Dependencies
         JAR Dependencies

what is dependency injection in java?
Ans: The dependency injection technique is used to generate the code withe external dependencies
         create a Test Double Allowing our code to deal with dependencies instead of creating them itself.
         example:
        - When you create a code to send an email : and you don’t want to send it,build a test double for send
         email and check if the email will be received,
        - The reminder for appointments: you cannot test it because there is no localhost

What is static binding and dynamic binding?
Ans:- Static Binding that happens at compile time (Early Binding):
            early binding is The binding of static, private and final methods is compile-time.
            The reason is that the these method cannot be overridden and the type of the class is
            determined at the compile time.
- Dynamic Binding that happens at runtime.(Late Binding)
            When compiler is not able to resolve the call/binding at compile time, such binding is known as Dynamic
            or late Binding.
            Method Overriding is a perfect example of dynamic binding as in overriding both parent and child classes
             have same method
            and in this case the type of the object determines which method is to be executed.
            The type of object is determined at the run time so this is known as dynamic binding.

